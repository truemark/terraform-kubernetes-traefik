deployment:
  enabled: true
  kind: DaemonSet
  lifecycle:
    preStop:
      exec:
        command: [ "/bin/sh", "-c", "sleep 60" ]
# Create a default IngressClass for Traefik
ingressClass:
  enabled: true
  isDefaultClass: ${is_default_class}
# Enable experimental features
experimental:
  v3:
    enabled: false
  plugins:
    enabled: false
  kubernetesGateway:
    enabled: false
    gateway:
      enabled: true
ingressRoute:
  dashboard:
    enabled: true
    annotations: { }
    labels: { }
    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    entryPoints: [ "traefik" ]
    middlewares: [ ]
    tls: { }
# Customize updateStrategy of traefik pods
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
#
# Configure providers
#
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: true
    allowExternalNameServices: true
    allowEmptyServices: true
    namespaces: [ ]
    # - "default"
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: true
    allowEmptyServices: true
    namespaces: [ ]
    publishedService:
      enabled: false
## Logs
## https://docs.traefik.io/observability/logs/
logs:
  general:
    level: ERROR
  access:
    enabled: true
    filters: { }
    format: json
    fields:
      general:
        defaultmode: keep
        names: { }
      headers:
        defaultmode: keep
        names: { }
metrics:
  prometheus:
    entryPoint: metrics
    service:
      enabled: true
      labels: { }
      annotations: { }
    serviceMonitor:
      jobLabel: traefik
      interval: 30s
      honorLabels: true
tracing: { }
globalArguments:
  - "--global.checknewversion"
${entrypoints}
service:
  enabled: true
  single: true
  type: NodePort
